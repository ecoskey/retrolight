#pragma kernel Bloom

#include "../ShaderLibrary/Filtering.hlsl"
#include "../ShaderLibrary/Viewport.hlsl"

TEXTURE2D(Source);
RW_TEXTURE2D(float4, BloomTarget);
uint2 BloomTargetSize;

bool BicubicUpscale;

#define MIP_LEVELS 3
#define TILE_SIZE 8

[numthreads(TILE_SIZE, TILE_SIZE, 1)]
void Bloom(uint2 id : SV_DispatchThreadID) {
    if (!any(id >= BloomTargetSize))
    
    
    //get uv coordinate for current thread based on pixel coords
    UNITY_UNROLLX(MIP_LEVELS)
    for (uint i = 0; i < MIP_LEVELS; i++) {
        if (any(id >= BloomTargetSize >> i)) break;
        gaussianBlur9_Compute_X(BloomTargetSize, id, i)
        //blur on x coordinate and write back to texture
        //AllMemoryBarrierWithGroupSync();
        //blur on y coordinate and write back to texture
        //AllMemoryBarrierWithGroupSync();
    }


    UNITY_UNROLLX(MIP_LEVELS)
    for (int i = MIP_LEVELS - 2; i >= 0; --i) {
        //sample from mip level i + 1
        //mipLevel[i] += sampled value
    }

    //combine mip level 0 and bloom source
}