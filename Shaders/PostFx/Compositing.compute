#pragma kernel CompositeSRGB

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/ACES.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Color.hlsl"
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/HDROutput.hlsl"

//IMPORTANT: this assumes both scene and input textures are the same size as the output texture (no scaling is applied)

TEXTURE2D(SrcTex0);
#define SceneTex SrcTex0

TEXTURE2D(SrcTex1);
#define UiTex SrcTex1

RW_TEXTURE2D(float3, OutTex);

[numthreads(16, 16, 1)]
void CompositeSRGB(uint2 pixCoord : SV_DispatchThreadID) {
    float3 sceneColor_unity = LOAD_TEXTURE2D(SceneTex, pixCoord);
    float4 uiColor_unity = LOAD_TEXTURE2D(UiTex, pixCoord);

    float3 composited = SceneUIComposition(uiColor_unity, sceneColor_unity, 1, 100);
}


